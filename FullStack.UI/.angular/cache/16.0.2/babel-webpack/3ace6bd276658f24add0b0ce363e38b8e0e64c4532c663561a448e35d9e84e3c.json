{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/employees.service\";\nimport * as i3 from \"@angular/forms\";\nclass EditEmployeeComponent {\n  constructor(route, employeeservice) {\n    this.route = route;\n    this.employeeservice = employeeservice;\n    this.employeeDetails = {\n      id: '00000000-0000-0000-0000-000000000000',\n      name: '',\n      email: '',\n      phone: '',\n      department: '',\n      salary: 0\n    };\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe({\n      next: params => {\n        const id = params.get('id');\n        if (id) {\n          //call api to get employee by id\n          this.employeeservice.getEmployee(id).subscribe({\n            next: resp => {\n              this.employeeDetails = resp;\n            }\n          });\n        }\n      }\n    });\n  }\n}\nEditEmployeeComponent.ɵfac = function EditEmployeeComponent_Factory(t) {\n  return new (t || EditEmployeeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.EmployeesService));\n};\nEditEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditEmployeeComponent,\n  selectors: [[\"app-edit-employee\"]],\n  decls: 31,\n  vars: 6,\n  consts: [[1, \"container\", \"my-5\"], [1, \"mb-2\"], [\"form\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"id\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"id\", \"readonly\", \"\", \"name\", \"id\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phone\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"phone\", \"name\", \"phone\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"salary\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"salary\", \"name\", \"salary\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"department\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"department\", \"name\", \"department\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function EditEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Add Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", null, 2)(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function EditEmployeeComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.employeeDetails.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EditEmployeeComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.employeeDetails.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function EditEmployeeComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.employeeDetails.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function EditEmployeeComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.employeeDetails.phone = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 3)(22, \"label\", 12);\n      i0.ɵɵtext(23, \"Salary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function EditEmployeeComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.employeeDetails.salary = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 3)(26, \"label\", 14);\n      i0.ɵɵtext(27, \"Department\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function EditEmployeeComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.employeeDetails.department = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"button\", 16);\n      i0.ɵɵtext(30, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeDetails.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeDetails.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeDetails.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeDetails.phone);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeDetails.salary);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeDetails.department);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { EditEmployeeComponent };","map":{"version":3,"names":["EditEmployeeComponent","constructor","route","employeeservice","employeeDetails","id","name","email","phone","department","salary","ngOnInit","paramMap","subscribe","next","params","get","getEmployee","resp","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","EmployeesService","selectors","decls","vars","consts","template","EditEmployeeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EditEmployeeComponent_Template_input_ngModelChange_8_listener","$event","EditEmployeeComponent_Template_input_ngModelChange_12_listener","EditEmployeeComponent_Template_input_ngModelChange_16_listener","EditEmployeeComponent_Template_input_ngModelChange_20_listener","EditEmployeeComponent_Template_input_ngModelChange_24_listener","EditEmployeeComponent_Template_input_ngModelChange_28_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\User\\Desktop\\ef_core\\FullStack.UI\\src\\app\\components\\employees\\edit-employee\\edit-employee.component.ts","C:\\Users\\User\\Desktop\\ef_core\\FullStack.UI\\src\\app\\components\\employees\\edit-employee\\edit-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Employee } from 'src/app/models/employee.model';\nimport { EmployeesService } from 'src/app/services/employees.service';\n\n@Component({\n  selector: 'app-edit-employee',\n  templateUrl: './edit-employee.component.html',\n  styleUrls: ['./edit-employee.component.css']\n})\nexport class EditEmployeeComponent implements OnInit {\n  \n    employeeDetails: Employee = {\n      id: '00000000-0000-0000-0000-000000000000',\n      name: '',\n      email: '',\n      phone: '',\n      department: '',\n      salary: 0\n    };\n    constructor(private route: ActivatedRoute, private employeeservice: EmployeesService) { }\n  \n    ngOnInit(): void {\n      this.route.paramMap.subscribe({\n        next: params => {\n          const id = params.get('id');\n\n          if (id) {\n            //call api to get employee by id\n            this.employeeservice.getEmployee(id).subscribe({\n              next: resp => {\n                this.employeeDetails = resp;\n              }\n            })\n          }\n        }\n      });\n    }\n}","<div class=\"container my-5\">\n    <h1 class=\"mb-2\">Add Employee</h1>\n    <form #form=\"ngForm\" >\n        <div class=\"mb-3\">\n            <label for=\"id\" class=\"form-label\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" readonly\n            name=\"id\" [(ngModel)]=\"employeeDetails.name\">\n          </div>\n        <div class=\"mb-3\">\n          <label for=\"name\" class=\"form-label\">Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" \n          name=\"name\" [(ngModel)]=\"employeeDetails.name\">\n        </div>\n        <div class=\"mb-3\">\n            <label for=\"email\" class=\"form-label\">Email address</label>\n            <input type=\"email\" class=\"form-control\" id=\"email\" \n            name=\"email\" [(ngModel)]=\"employeeDetails.email\">\n        </div>\n        <div class=\"mb-3\">\n            <label for=\"phone\" class=\"form-label\">Phone</label>\n            <input type=\"text\" class=\"form-control\" id=\"phone\"\n            name=\"phone\" [(ngModel)]=\"employeeDetails.phone\">\n        </div>\n        <div class=\"mb-3\">\n            <label for=\"salary\" class=\"form-label\">Salary</label>\n            <input type=\"number\" class=\"form-control\" id=\"salary\"\n            name=\"salary\" [(ngModel)]=\"employeeDetails.salary\">\n        </div>\n        <div class=\"mb-3\">\n            <label for=\"department\" class=\"form-label\">Department</label>\n            <input type=\"text\" class=\"form-control\" id=\"department\"\n            name=\"department\" [(ngModel)]=\"employeeDetails.department\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n      </form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}